#!/bin/sh

hostname darkstar
chmod 700 /mnt/cdrom /mnt/gentoo /mnt/key
chmod 600 /mnt/image.squashfs

echo 'root:$6$rounds=5000000$Ba/xs5f3VIo9$WzQQnpPal2FGbW3gJUeHQBcaNC3hs9Lf.aiEuyk9j1pRW0u0hH8heA9Ss88QU3IQOzzqI4xoSmN4m3BgJge0e0' | chpasswd -e

# adjust caching
#sysctl -w vm.swappiness=0
#sysctl -w kernel.randomize_va_space=2
echo 65536 > /proc/sys/vm/min_free_kbytes
echo 0 > /proc/sys/vm/swappiness
echo 3 > /proc/sys/vm/drop_caches
echo 2 > /proc/sys/kernel/randomize_va_space
echo 32 > /proc/sys/vm/mmap_rnd_bits
#echo 3000 > /proc/sys/vm/dirty_expire_centisecs
#echo 500 > /proc/sys/vm/dirty_writeback_centisecs

echo -1 > /sys/module/usbcore/parameters/autosuspend
echo 2000000 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_rate
echo 30 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor
echo 20 > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold

# enable core dumps
sysctl -w kernel.core_uses_pid=1
sysctl -w kernel.core_pattern="/tmp/core-%e-%s-%u-%g-%p-%t"
sysctl -w fs.suid_dumpable=2

# networking tweaks
sysctl -w net.core.netdev_max_backlog=2000
sysctl -w net.ipv4.tcp_max_syn_backlog=2048
sysctl -w net.core.rmem_max=425984
sysctl -w net.core.wmem_max=425984
sysctl -w net.ipv4.tcp_sack=0

for i in $(ifconfig -a | sed 's/[ \t].*//;/^$/d' | sed 's/://g' | grep -v '^lo$') ; do
    ifconfig ${i} txqueuelen 2000
done

umount /mnt/cdrom
umount /sys/fs/cgroup/openrc
umount /sys/fs/cgroup
umount /sys/fs/fuse/connections
umount /dev/mqueue
umount /dev/shm

mount -o remount,hidepid=2 /proc/
chmod 755 /

# add default users groups and passwords
groupadd -g 3333333 lanout
groupadd -g 8888888 wanout

# lock down network
LANUSERS=""
WANUSERS=""
LANGROUPS="7777"
WANGROUPS="8888"
iptables -F
iptables -X
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP
# WoL port
iptables -A OUTPUT -p udp -d 192.168.0.0/16,172.16.0.0/16,10.0.0.0/8,127.0.0.0/8 --dport 9999 -j ACCEPT
# deny x11
iptables -A OUTPUT -p tcp --syn --destination-port 6000:6063 -j REJECT
iptables -A INPUT -p tcp --syn --destination-port 6000:6063 -j DROP
#
for u in $WANUSERS ; do
  iptables -A OUTPUT -m owner --uid-owner $u -d 192.168.0.0/16,172.16.0.0/16,10.0.0.0/8,127.0.0.1 -j DROP
  iptables -A OUTPUT -m owner --uid-owner $u -j ACCEPT
done
for u in $LANUSERS ; do
  iptables -A OUTPUT -m owner --uid-owner $u -d 192.168.0.0/16,172.16.0.0/16,10.0.0.0/8 -j ACCEPT
done
for g in $WANGROUPS ; do
  iptables -A OUTPUT -m owner --gid-owner $g -d 192.168.0.0/16,172.16.0.0/16,10.0.0.0/8,127.0.0.1 -j DROP
  iptables -A OUTPUT -m owner --gid-owner $g -j ACCEPT
done
for g in $LANGROUPS ; do
  iptables -A OUTPUT -m owner --gid-owner $g -d 192.168.0.0/16,172.16.0.0/16,10.0.0.0/8,127.0.0.0/8 -j ACCEPT
done
#iptables -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

mkdir -p /media/backup /media/catalyst /media/cdrom /media/iscsi /media/nfs /media/sshfs /media/stick

#e2label /dev/mapper/home HOME
#mkswap -L SWAP /dev/DISK
mount /dev/disk/by-label/CFG /etc/cfg 2>/dev/null
swapon -L SWAP 2>/dev/null
# -o user_xattr,sync,dirsync

#relocate compiled scriptlets to CFG
if [ -e /etc/cfg/cfg.sh ]; then
    /bin/sh /etc/cfg/cfg.sh
    umount /etc/cfg
fi

sync || true
